<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sidgs.api.commons.apigeex</groupId>
    <artifactId>sidgs-parent-pom-apigeex</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <name>sidgs-parent-pom-apigeex</name>

    <properties>
        <!--maven.deploy.skip - Revert back to true if developer wants to do local developement and wants to skip the artifacts deployment to nexus-->
        <maven.deploy.skip>false</maven.deploy.skip>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
        <maven.compile.encoding>UTF-8</maven.compile.encoding>
        <org.slf4j.simpleLogger.defaultLogLevel>info</org.slf4j.simpleLogger.defaultLogLevel>
        <project.root.dir>${basedir}</project.root.dir>
        <target.root.dir>${basedir}/target</target.root.dir>
        <deployment.suffix>${user.name}</deployment.suffix>
        <deployment.env>-${env}</deployment.env>
        <cucumber.tags.develop>--tags @develop</cucumber.tags.develop>
        <cucumber.tags.feature>--tags @feature</cucumber.tags.feature>
        <cucumber.tags.hotfix>--tags @hotfix</cucumber.tags.hotfix>
        <cucumber.tags.release>--tags @release</cucumber.tags.release>
        <cucumber.tags.enabled>false</cucumber.tags.enabled>
        <jgitflow.version>1.0-m5.1</jgitflow.version>
        <commit>${user.name}-local</commit>
        <branch>${user.name}-local</branch>

        <scmUsername/>
        <scmPassword/>


    </properties>

    <!--<distributionManagement>-->
        <!--<snapshotRepository>-->
            <!--<id>apiSnapshotRepository</id>-->
            <!--<name>Internal Snapshots Repository</name>-->
            <!--<url>${snapshot.distribution.url}</url>-->
            <!--<uniqueVersion>false</uniqueVersion>-->
        <!--</snapshotRepository>-->
        <!--<repository>-->
            <!--<id>apiReleaseRepository</id>-->
            <!--<name>Internal Maven Release Repository</name>-->
            <!--<url>${releases.distribution.url}</url>-->
        <!--</repository>-->
    <!--</distributionManagement>-->


<!--    <distributionManagement>-->
<!--        <repository>-->
<!--            <id>releases</id>-->
<!--            <name>apigeex-releases</name>-->
<!--            <url>${env.NEXUS_REPO_URL}apigee-release/</url>-->
<!--            &lt;!&ndash;<releases>&ndash;&gt;-->
<!--            &lt;!&ndash;<enabled>false</enabled>&ndash;&gt;-->
<!--            &lt;!&ndash;</releases>&ndash;&gt;-->
<!--            &lt;!&ndash;<snapshots>&ndash;&gt;-->
<!--            &lt;!&ndash;<enabled>true</enabled>&ndash;&gt;-->
<!--            &lt;!&ndash;</snapshots>&ndash;&gt;-->
<!--        </repository>-->
<!--        <snapshotRepository>-->
<!--            <id>snapshots</id>-->
<!--            <name>apigeex-snapshots</name>-->
<!--            <url>${env.NEXUS_REPO_URL}apigee-snapshot/</url>-->
<!--        </snapshotRepository>-->
<!--    </distributionManagement>-->
    <distributionManagement>
        <repository>
            <id>sidgs-jfrog-releases</id>
            <name>SIDGS JFrog Releases</name>
            <url>https://sidgs.jfrog.io/artifactory/sidgs-maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>sidgs-jfrog-snapshots</id>
            <name>SIDGS JFrog Snapshots</name>
            <url>https://sidgs.jfrog.io/artifactory/sidgs-maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <profiles>

        <!--release management -->

        <profile>
            <id>gitflow</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>external.atlassian.jgitflow</groupId>
                        <artifactId>jgitflow-maven-plugin</artifactId>
                        <version>1.0-m5.1</version>

                        <configuration>
                            <noDeploy>true</noDeploy>
                            <username>${scmUsername}</username>
                            <password>${scmPassword}</password>
                            <!-- <enableSshAgent>true</enableSshAgent>-->
                            <flowInitContext>
                                <masterBranchName>master</masterBranchName>
                                <developBranchName>develop</developBranchName>
                                <featureBranchPrefix>feat-</featureBranchPrefix>
                                <releaseBranchPrefix>rel-</releaseBranchPrefix>
                                <hotfixBranchPrefix>hf-</hotfixBranchPrefix>
                            </flowInitContext>
                            <!-- Keep your maven submodules at the same version as the aggregator POM -->
                            <autoVersionSubmodules>true</autoVersionSubmodules>
                            <allowSnapshots>true</allowSnapshots>
                            <!-- Share feature branches -->
                            <pushFeatures>true</pushFeatures>
                            <!-- Create a release branch when a release goal is initiated -->
                            <pushReleases>true</pushReleases>
                            <!-- Share maintenance branches -->
                            <pushHotfixes>true</pushHotfixes>
                            <!-- Prevents deployments from development workstations so that they can
                            be done by a CI server -->
                            <noDeploy>true</noDeploy>

                            <!--<squash>true</squash>-->
                            <enableFeatureVersions>true</enableFeatureVersions>
                            <!--                            <versionNumberToIncrement>1</versionNumberToIncrement>-->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>



        <!-- apigeex-apirpoxy-->
        <profile>
            <id>apigeex-apiproxy</id>
            <properties>
                <apigee.profile>apigee</apigee.profile>
                <apigee.hosturl>https://apigee.googleapis.com</apigee.hosturl>
                <apigee.apiversion>v1</apigee.apiversion>
                <apigee.org>${org}</apigee.org>
                <apigee.env>${env}</apigee.env>
                <apigee.authtype>oauth</apigee.authtype>
                <apigee.serviceaccount.file>${file}</apigee.serviceaccount.file>
                <apigee.options>override</apigee.options>
                <apigee.config.options>update</apigee.config.options>
                <apigee.config.dir>target/resources/edge</apigee.config.dir>
                <apigee.config.exportDir>target/test/integration</apigee.config.exportDir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.apigee.edge.config</groupId>
                        <artifactId>apigee-config-maven-plugin</artifactId>
                        <version>2.1.0</version>
                        <executions>
                            <execution>
                                <id>create-config-targetserver</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>targetservers</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>create-config-resourcefiles</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>resourcefiles</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>create-config-apiproduct</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>apiproducts</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>create-config-developer</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>developers</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>create-config-app</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>apps</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>export-config-app</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>exportAppKeys</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.apigee.build-tools.enterprise4g</groupId>
                        <artifactId>apigee-edge-maven-plugin</artifactId>
                        <version>2.1.0</version>
                        <executions>
                            <execution>
                                <id>configure-bundle</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>configure</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>deploy-bundle</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- proxy-unit-init -->
        <profile>
            <id>proxy-unit-test</id>
            <build>
                <plugins>

                    <!-- run jslint -->
                    <plugin>
                        <groupId>com.cj.jshintmojo</groupId>
                        <artifactId>jshint-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <id>jslint</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>lint</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <directories>
                                <directory>apiproxy/resources/jsc</directory>
                            </directories>
                            <reporter>jslint</reporter>
                        </configuration>
                    </plugin>

                    <!--unit init , code coverage , functional init -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>
                            <!-- npm install -->
                            <execution>
                                <id>npm-install</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>npm</executable>
                                    <commandlineArgs>
                                        install
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                            <!-- run unit tests -->
                            <execution>
                                <id>unit</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>node</executable>
                                    <commandlineArgs>
                                        node_modules/istanbul/lib/cli.js cover --dir target/unit-test-coverage
                                        node_modules/mocha/bin/_mocha test/unit
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                            <!-- Check Code Coverage-->
                            <execution>
                                <id>check-coverage</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>node</executable>
                                    <commandlineArgs>
                                        node_modules/istanbul/lib/cli.js check-coverage
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>

            </build>
        </profile>

        <!-- proxy-linting -->
        <profile>
            <id>proxy-linting</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>

                            <!-- npm install -->
                            <execution>
                                <id>npm-install</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>npm</executable>
                                    <commandlineArgs>
                                        install
                                    </commandlineArgs>
                                </configuration>
                            </execution>

                            <!-- run linting -->
                            <execution>
                                <id>proxy-linting</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>node</executable>
                                    <commandlineArgs>
                                        node_modules/apigeelint/cli.js -s apiproxy -f html.js > apigeelint.html
                                    </commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>





        <profile>
            <id>release</id>
            <!-- Needs to be activated only when we are performing artifact releases -->
            <distributionManagement>
                <repository>
                    <id>apiReleaseRepository</id>
                    <name>Internal Maven Release Repository</name>
                    <url>${releases.distribution.url}</url>
                </repository>
            </distributionManagement>
        </profile>


    </profiles>

    <build>
    </build>


</project>
